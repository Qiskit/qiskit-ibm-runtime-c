/*
 * IAM Identity Services
 *
 * The IAM Identity Service API allows for the management of Account Settings and Identities (Service IDs, ApiKeys).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// EnityHistoryRecord : Response body format for an entity history record.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EnityHistoryRecord {
    /// Timestamp when the action was triggered.
    #[serde(rename = "timestamp")]
    pub timestamp: String,
    /// IAM ID of the identity which triggered the action.
    #[serde(rename = "iam_id")]
    pub iam_id: String,
    /// Account of the identity which triggered the action.
    #[serde(rename = "iam_id_account")]
    pub iam_id_account: String,
    /// Action of the history entry.
    #[serde(rename = "action")]
    pub action: String,
    /// Params of the history entry.
    #[serde(rename = "params")]
    pub params: Vec<String>,
    /// Message which summarizes the executed action.
    #[serde(rename = "message")]
    pub message: String,
}

impl EnityHistoryRecord {
    /// Response body format for an entity history record.
    pub fn new(timestamp: String, iam_id: String, iam_id_account: String, action: String, params: Vec<String>, message: String) -> EnityHistoryRecord {
        EnityHistoryRecord {
            timestamp,
            iam_id,
            iam_id_account,
            action,
            params,
            message,
        }
    }
}

