/*
 * IAM Identity Services
 *
 * The IAM Identity Service API allows for the management of Account Settings and Identities (Service IDs, ApiKeys).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ReportMfaEnrollmentStatus {
    /// IAMid of the user who triggered the report
    #[serde(rename = "created_by")]
    pub created_by: String,
    /// Unique reference used to generate the report
    #[serde(rename = "reference")]
    pub reference: String,
    /// Date time at which report is generated. Date is in ISO format.
    #[serde(rename = "report_time")]
    pub report_time: String,
    /// BSS account id of the user who triggered the report
    #[serde(rename = "account_id")]
    pub account_id: String,
    /// IMS account id of the user who triggered the report
    #[serde(rename = "ims_account_id", skip_serializing_if = "Option::is_none")]
    pub ims_account_id: Option<String>,
    /// List of users
    #[serde(rename = "users", skip_serializing_if = "Option::is_none")]
    pub users: Option<Vec<models::UserReportMfaEnrollmentStatus>>,
}

impl ReportMfaEnrollmentStatus {
    pub fn new(created_by: String, reference: String, report_time: String, account_id: String) -> ReportMfaEnrollmentStatus {
        ReportMfaEnrollmentStatus {
            created_by,
            reference,
            report_time,
            account_id,
            ims_account_id: None,
            users: None,
        }
    }
}

