/*
 * IAM Identity Services
 *
 * The IAM Identity Service API allows for the management of Account Settings and Identities (Service IDs, ApiKeys).
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProfileClaimRuleRequest {
    #[serde(rename = "context", skip_serializing_if = "Option::is_none")]
    pub context: Option<Box<models::ResponseContext>>,
    /// Name of the claim rule to be created or updated
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Type of the claim rule, either 'Profile-SAML' or 'Profile-CR'
    #[serde(rename = "type")]
    pub r#type: String,
    /// The realm name of the Idp this claim rule applies to. This field is required only if the type is specified as 'Profile-SAML'.
    #[serde(rename = "realm_name", skip_serializing_if = "Option::is_none")]
    pub realm_name: Option<String>,
    /// The compute resource type the rule applies to, required only if type is specified as 'Profile-CR'. Valid values are VSI, IKS_SA, ROKS_SA.
    #[serde(rename = "cr_type", skip_serializing_if = "Option::is_none")]
    pub cr_type: Option<String>,
    /// Session expiration in seconds, only required if type is 'Profile-SAML'.
    #[serde(rename = "expiration", skip_serializing_if = "Option::is_none")]
    pub expiration: Option<i32>,
    /// Conditions of this claim rule.
    #[serde(rename = "conditions")]
    pub conditions: Vec<models::ProfileClaimRuleConditions>,
}

impl ProfileClaimRuleRequest {
    pub fn new(
        r#type: String,
        conditions: Vec<models::ProfileClaimRuleConditions>,
    ) -> ProfileClaimRuleRequest {
        ProfileClaimRuleRequest {
            context: None,
            name: None,
            r#type,
            realm_name: None,
            cr_type: None,
            expiration: None,
            conditions,
        }
    }
}
