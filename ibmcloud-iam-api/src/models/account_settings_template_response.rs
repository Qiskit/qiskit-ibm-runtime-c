/*
 * IAM Identity Services
 *
 * The IAM Identity Service API allows for the management of Account Settings and Identities (Service IDs, ApiKeys).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AccountSettingsTemplateResponse : Response body format for account settings template REST requests
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AccountSettingsTemplateResponse {
    /// ID of the the template
    #[serde(rename = "id")]
    pub id: String,
    /// Version of the the template
    #[serde(rename = "version")]
    pub version: i64,
    /// ID of the account where the template resides.
    #[serde(rename = "account_id")]
    pub account_id: String,
    /// The name of the trusted profile template. This is visible only in the enterprise account.
    #[serde(rename = "name")]
    pub name: String,
    /// The description of the trusted profile template. Describe the template for enterprise account users.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Committed flag determines if the template is ready for assignment
    #[serde(rename = "committed")]
    pub committed: bool,
    #[serde(rename = "account_settings")]
    pub account_settings: Box<models::AccountSettingsComponent>,
    /// History of the Template.
    #[serde(rename = "history", skip_serializing_if = "Option::is_none")]
    pub history: Option<Vec<models::EnityHistoryRecord>>,
    /// Entity tag for this templateId-version combination
    #[serde(rename = "entity_tag")]
    pub entity_tag: String,
    /// Cloud resource name
    #[serde(rename = "crn")]
    pub crn: String,
    /// Template Created At
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    /// IAMid of the creator
    #[serde(rename = "created_by_id", skip_serializing_if = "Option::is_none")]
    pub created_by_id: Option<String>,
    /// Template last modified at
    #[serde(rename = "last_modified_at", skip_serializing_if = "Option::is_none")]
    pub last_modified_at: Option<String>,
    /// IAMid of the identity that made the latest modification
    #[serde(rename = "last_modified_by_id", skip_serializing_if = "Option::is_none")]
    pub last_modified_by_id: Option<String>,
}

impl AccountSettingsTemplateResponse {
    /// Response body format for account settings template REST requests
    pub fn new(id: String, version: i64, account_id: String, name: String, committed: bool, account_settings: models::AccountSettingsComponent, entity_tag: String, crn: String) -> AccountSettingsTemplateResponse {
        AccountSettingsTemplateResponse {
            id,
            version,
            account_id,
            name,
            description: None,
            committed,
            account_settings: Box::new(account_settings),
            history: None,
            entity_tag,
            crn,
            created_at: None,
            created_by_id: None,
            last_modified_at: None,
            last_modified_by_id: None,
        }
    }
}

