/*
 * IAM Identity Services
 *
 * The IAM Identity Service API allows for the management of Account Settings and Identities (Service IDs, ApiKeys).
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CreateTemplateAssignmentRequest : Body parameters for create assignment request
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateTemplateAssignmentRequest {
    /// ID of the template to assign
    #[serde(rename = "template_id")]
    pub template_id: String,
    /// Version of the template to assign
    #[serde(rename = "template_version")]
    pub template_version: i64,
    /// Type of target to deploy to
    #[serde(rename = "target_type")]
    pub target_type: TargetType,
    /// Identifier of target to deploy to
    #[serde(rename = "target")]
    pub target: String,
}

impl CreateTemplateAssignmentRequest {
    /// Body parameters for create assignment request
    pub fn new(
        template_id: String,
        template_version: i64,
        target_type: TargetType,
        target: String,
    ) -> CreateTemplateAssignmentRequest {
        CreateTemplateAssignmentRequest {
            template_id,
            template_version,
            target_type,
            target,
        }
    }
}
/// Type of target to deploy to
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TargetType {
    #[serde(rename = "Account")]
    Account,
    #[serde(rename = "AccountGroup")]
    AccountGroup,
}

impl Default for TargetType {
    fn default() -> TargetType {
        Self::Account
    }
}
