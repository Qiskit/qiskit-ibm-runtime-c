/*
 * IAM Identity Services
 *
 * The IAM Identity Service API allows for the management of Account Settings and Identities (Service IDs, ApiKeys).
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// TemplateAssignmentResponse : Response body format for Template Assignment Record
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TemplateAssignmentResponse {
    #[serde(rename = "context", skip_serializing_if = "Option::is_none")]
    pub context: Option<Box<models::ResponseContext>>,
    /// Assignment record Id
    #[serde(rename = "id")]
    pub id: String,
    /// Enterprise account Id
    #[serde(rename = "account_id")]
    pub account_id: String,
    /// Template Id
    #[serde(rename = "template_id")]
    pub template_id: String,
    /// Template version
    #[serde(rename = "template_version")]
    pub template_version: i64,
    /// Assignment target type
    #[serde(rename = "target_type")]
    pub target_type: String,
    /// Assignment target
    #[serde(rename = "target")]
    pub target: String,
    /// Assignment status
    #[serde(rename = "status")]
    pub status: String,
    /// Status breakdown per target account of IAM resources created or errors encountered in attempting to create those IAM resources. IAM resources are only included in the response providing the assignment is not in progress. IAM resources are also only included when getting a single assignment, and excluded by list APIs.
    #[serde(rename = "resources", skip_serializing_if = "Option::is_none")]
    pub resources: Option<Vec<models::TemplateAssignmentResponseResource>>,
    /// Assignment history
    #[serde(rename = "history", skip_serializing_if = "Option::is_none")]
    pub history: Option<Vec<models::EnityHistoryRecord>>,
    /// Href
    #[serde(rename = "href", skip_serializing_if = "Option::is_none")]
    pub href: Option<String>,
    /// Assignment created at
    #[serde(rename = "created_at")]
    pub created_at: String,
    /// IAMid of the identity that created the assignment
    #[serde(rename = "created_by_id")]
    pub created_by_id: String,
    /// Assignment modified at
    #[serde(rename = "last_modified_at")]
    pub last_modified_at: String,
    /// IAMid of the identity that last modified the assignment
    #[serde(rename = "last_modified_by_id")]
    pub last_modified_by_id: String,
    /// Entity tag for this assignment record
    #[serde(rename = "entity_tag")]
    pub entity_tag: String,
}

impl TemplateAssignmentResponse {
    /// Response body format for Template Assignment Record
    pub fn new(
        id: String,
        account_id: String,
        template_id: String,
        template_version: i64,
        target_type: String,
        target: String,
        status: String,
        created_at: String,
        created_by_id: String,
        last_modified_at: String,
        last_modified_by_id: String,
        entity_tag: String,
    ) -> TemplateAssignmentResponse {
        TemplateAssignmentResponse {
            context: None,
            id,
            account_id,
            template_id,
            template_version,
            target_type,
            target,
            status,
            resources: None,
            history: None,
            href: None,
            created_at,
            created_by_id,
            last_modified_at,
            last_modified_by_id,
            entity_tag,
        }
    }
}
