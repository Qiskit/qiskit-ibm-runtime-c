/*
 * IAM Identity Services
 *
 * The IAM Identity Service API allows for the management of Account Settings and Identities (Service IDs, ApiKeys).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// EffectiveAccountSettingsResponse : Response body format for Account Settings REST requests.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EffectiveAccountSettingsResponse {
    #[serde(rename = "context", skip_serializing_if = "Option::is_none")]
    pub context: Option<Box<models::ResponseContext>>,
    /// Unique ID of the account.
    #[serde(rename = "account_id")]
    pub account_id: String,
    #[serde(rename = "effective")]
    pub effective: models::AccountSettingsEffectiveSection,
    #[serde(rename = "account")]
    pub account: models::AccountSettingsAccountSection,
    /// assigned template section.
    #[serde(rename = "assigned_templates", skip_serializing_if = "Option::is_none")]
    pub assigned_templates: Option<Vec<models::AccountSettingsAssignedTemplatesSection>>,
}

impl EffectiveAccountSettingsResponse {
    /// Response body format for Account Settings REST requests.
    pub fn new(account_id: String, effective: models::AccountSettingsEffectiveSection, account: models::AccountSettingsAccountSection) -> EffectiveAccountSettingsResponse {
        EffectiveAccountSettingsResponse {
            context: None,
            account_id,
            effective,
            account,
            assigned_templates: None,
        }
    }
}

