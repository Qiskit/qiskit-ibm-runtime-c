/*
 * IAM Identity Services
 *
 * The IAM Identity Service API allows for the management of Account Settings and Identities (Service IDs, ApiKeys).
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserActivity {
    /// IAMid of the user
    #[serde(rename = "iam_id")]
    pub iam_id: String,
    /// Name of the user
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Username of the user
    #[serde(rename = "username")]
    pub username: String,
    /// Email of the user
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    /// Time when the user was last authenticated.
    #[serde(rename = "last_authn", skip_serializing_if = "Option::is_none")]
    pub last_authn: Option<String>,
}

impl UserActivity {
    pub fn new(iam_id: String, username: String) -> UserActivity {
        UserActivity {
            iam_id,
            name: None,
            username,
            email: None,
            last_authn: None,
        }
    }
}
