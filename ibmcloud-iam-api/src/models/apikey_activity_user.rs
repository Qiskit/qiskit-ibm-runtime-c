/*
 * IAM Identity Services
 *
 * The IAM Identity Service API allows for the management of Account Settings and Identities (Service IDs, ApiKeys).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ApikeyActivityUser : user details will be present if type is `user`
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApikeyActivityUser {
    /// IAMid of the user
    #[serde(rename = "iam_id", skip_serializing_if = "Option::is_none")]
    pub iam_id: Option<String>,
    /// Name of the user
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Username of the user
    #[serde(rename = "username", skip_serializing_if = "Option::is_none")]
    pub username: Option<String>,
    /// Email of the user
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
}

impl ApikeyActivityUser {
    /// user details will be present if type is `user`
    pub fn new() -> ApikeyActivityUser {
        ApikeyActivityUser {
            iam_id: None,
            name: None,
            username: None,
            email: None,
        }
    }
}

