/*
 * IAM Identity Services
 *
 * The IAM Identity Service API allows for the management of Account Settings and Identities (Service IDs, ApiKeys).
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AccountBasedMfaEnrollment {
    #[serde(rename = "security_questions")]
    pub security_questions: models::MfaEnrollmentTypeStatus,
    #[serde(rename = "totp")]
    pub totp: models::MfaEnrollmentTypeStatus,
    #[serde(rename = "verisign")]
    pub verisign: models::MfaEnrollmentTypeStatus,
    /// The enrollment complies to the effective requirement.
    #[serde(rename = "complies")]
    pub complies: bool,
}

impl AccountBasedMfaEnrollment {
    pub fn new(
        security_questions: models::MfaEnrollmentTypeStatus,
        totp: models::MfaEnrollmentTypeStatus,
        verisign: models::MfaEnrollmentTypeStatus,
        complies: bool,
    ) -> AccountBasedMfaEnrollment {
        AccountBasedMfaEnrollment {
            security_questions,
            totp,
            verisign,
            complies,
        }
    }
}
