/*
 * IAM Identity Services
 *
 * The IAM Identity Service API allows for the management of Account Settings and Identities (Service IDs, ApiKeys).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Report {
    /// IAMid of the user who triggered the report
    #[serde(rename = "created_by")]
    pub created_by: String,
    /// Unique reference used to generate the report
    #[serde(rename = "reference")]
    pub reference: String,
    /// Duration in hours for which the report is generated.
    #[serde(rename = "report_duration")]
    pub report_duration: String,
    /// Start time of the report
    #[serde(rename = "report_start_time")]
    pub report_start_time: String,
    /// End time of the report
    #[serde(rename = "report_end_time")]
    pub report_end_time: String,
    /// List of users
    #[serde(rename = "users", skip_serializing_if = "Option::is_none")]
    pub users: Option<Vec<models::UserActivity>>,
    /// List of apikeys
    #[serde(rename = "apikeys", skip_serializing_if = "Option::is_none")]
    pub apikeys: Option<Vec<models::ApikeyActivity>>,
    /// List of serviceids
    #[serde(rename = "serviceids", skip_serializing_if = "Option::is_none")]
    pub serviceids: Option<Vec<models::EntityActivity>>,
    /// List of profiles
    #[serde(rename = "profiles", skip_serializing_if = "Option::is_none")]
    pub profiles: Option<Vec<models::EntityActivity>>,
}

impl Report {
    pub fn new(created_by: String, reference: String, report_duration: String, report_start_time: String, report_end_time: String) -> Report {
        Report {
            created_by,
            reference,
            report_duration,
            report_start_time,
            report_end_time,
            users: None,
            apikeys: None,
            serviceids: None,
            profiles: None,
        }
    }
}

