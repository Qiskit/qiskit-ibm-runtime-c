/*
 * IAM Identity Services
 *
 * The IAM Identity Service API allows for the management of Account Settings and Identities (Service IDs, ApiKeys).
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProfileClaimRuleConditions {
    /// The claim to evaluate against. [Learn more](/docs/account?topic=account-iam-condition-properties&interface=ui#cr-attribute-names).
    #[serde(rename = "claim")]
    pub claim: String,
    /// The operation to perform on the claim. valid values are EQUALS, NOT_EQUALS, EQUALS_IGNORE_CASE, NOT_EQUALS_IGNORE_CASE, CONTAINS, IN
    #[serde(rename = "operator")]
    pub operator: String,
    /// The stringified JSON value that the claim is compared to using the operator
    #[serde(rename = "value")]
    pub value: String,
}

impl ProfileClaimRuleConditions {
    pub fn new(claim: String, operator: String, value: String) -> ProfileClaimRuleConditions {
        ProfileClaimRuleConditions {
            claim,
            operator,
            value,
        }
    }
}
