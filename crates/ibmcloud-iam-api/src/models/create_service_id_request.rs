/*
 * IAM Identity Services
 *
 * The IAM Identity Service API allows for the management of Account Settings and Identities (Service IDs, ApiKeys).
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CreateServiceIdRequest : Input body parameters for the Create service ID V1 REST request.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateServiceIdRequest {
    /// ID of the account the service ID belongs to.
    #[serde(rename = "account_id")]
    pub account_id: String,
    /// Name of the Service Id. The name is not checked for uniqueness. Therefore multiple names with the same value can exist. Access is done via the UUID of the Service Id.
    #[serde(rename = "name")]
    pub name: String,
    /// The optional description of the Service Id. The 'description' property is only available if a description was provided during a create of a Service Id.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Optional list of CRNs (string array) which point to the services connected to the service ID.
    #[serde(
        rename = "unique_instance_crns",
        skip_serializing_if = "Option::is_none"
    )]
    pub unique_instance_crns: Option<Vec<String>>,
    #[serde(rename = "apikey", skip_serializing_if = "Option::is_none")]
    pub apikey: Option<Box<models::ApiKeyInsideCreateServiceIdRequest>>,
}

impl CreateServiceIdRequest {
    /// Input body parameters for the Create service ID V1 REST request.
    pub fn new(account_id: String, name: String) -> CreateServiceIdRequest {
        CreateServiceIdRequest {
            account_id,
            name,
            description: None,
            unique_instance_crns: None,
            apikey: None,
        }
    }
}
