/*
 * IAM Identity Services
 *
 * The IAM Identity Service API allows for the management of Account Settings and Identities (Service IDs, ApiKeys).
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TemplateAssignmentResponseResourceDetail {
    /// Policy Template Id, only returned for a profile assignment with policy references.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Policy version, only returned for a profile assignment with policy references.
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    #[serde(rename = "resource_created", skip_serializing_if = "Option::is_none")]
    pub resource_created: Option<models::TemplateAssignmentResource>,
    #[serde(rename = "error_message", skip_serializing_if = "Option::is_none")]
    pub error_message: Option<models::TemplateAssignmentResourceError>,
    /// Status for the target account's assignment
    #[serde(rename = "status")]
    pub status: String,
}

impl TemplateAssignmentResponseResourceDetail {
    pub fn new(status: String) -> TemplateAssignmentResponseResourceDetail {
        TemplateAssignmentResponseResourceDetail {
            id: None,
            version: None,
            resource_created: None,
            error_message: None,
            status,
        }
    }
}
