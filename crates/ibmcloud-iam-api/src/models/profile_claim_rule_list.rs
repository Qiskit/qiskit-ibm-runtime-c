/*
 * IAM Identity Services
 *
 * The IAM Identity Service API allows for the management of Account Settings and Identities (Service IDs, ApiKeys).
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProfileClaimRuleList {
    #[serde(rename = "context", skip_serializing_if = "Option::is_none")]
    pub context: Option<Box<models::ResponseContext>>,
    /// List of claim rules
    #[serde(rename = "rules")]
    pub rules: Vec<models::ProfileClaimRule>,
}

impl ProfileClaimRuleList {
    pub fn new(rules: Vec<models::ProfileClaimRule>) -> ProfileClaimRuleList {
        ProfileClaimRuleList {
            context: None,
            rules,
        }
    }
}
