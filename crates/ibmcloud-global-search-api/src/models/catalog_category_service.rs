/*
 * Global Search
 *
 * Search for resources with the global and shared resource properties repository that is integrated in the IBM Cloud platform. The search repository stores and searches cloud resources attributes, which categorize or classify resources. A resource is a physical or logical component that can be created or reserved for an application or service instance. They are owned by resource providers, such as IBM Kubernetes Service, or resource controller in IBM Cloud. Resources are uniquely identified by a Cloud Resource Name (CRN) or by an IMS ID. The properties of a resource include tags and system properties. Both properties are defined in an IBM Cloud billing account, and span across many regions.
 *
 * The version of the OpenAPI document: 2.0.1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CatalogCategoryService : A Global catalog category service
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CatalogCategoryService {
    /// The service identifier in Globacatalog
    #[serde(rename = "id")]
    pub id: String,
    /// The service display name in the selected language
    #[serde(rename = "display_name")]
    pub display_name: String,
    /// The name of the service. It can be used to query GhoST property service_name
    #[serde(rename = "name")]
    pub name: String,
    /// The kind of the Global catalog entry. Example values are `service`, `runtime`, `application`, `buildpack`
    #[serde(rename = "kind")]
    pub kind: String,
    /// A flag that indicates whether the service is onboarded in GhoST
    #[serde(rename = "gst_support")]
    pub gst_support: bool,
    /// gst_data
    #[serde(rename = "gst_data", skip_serializing_if = "Option::is_none")]
    pub gst_data: Option<Vec<models::GstData>>,
}

impl CatalogCategoryService {
    /// A Global catalog category service
    pub fn new(
        id: String,
        display_name: String,
        name: String,
        kind: String,
        gst_support: bool,
    ) -> CatalogCategoryService {
        CatalogCategoryService {
            id,
            display_name,
            name,
            kind,
            gst_support,
            gst_data: None,
        }
    }
}
