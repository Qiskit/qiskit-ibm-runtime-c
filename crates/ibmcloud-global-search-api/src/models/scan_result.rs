/*
 * Global Search
 *
 * Search for resources with the global and shared resource properties repository that is integrated in the IBM Cloud platform. The search repository stores and searches cloud resources attributes, which categorize or classify resources. A resource is a physical or logical component that can be created or reserved for an application or service instance. They are owned by resource providers, such as IBM Kubernetes Service, or resource controller in IBM Cloud. Resources are uniquely identified by a Cloud Resource Name (CRN) or by an IMS ID. The properties of a resource include tags and system properties. Both properties are defined in an IBM Cloud billing account, and span across many regions.
 *
 * The version of the OpenAPI document: 2.0.1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ScanResult : The search scan response
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ScanResult {
    /// The search cursor to use on all calls after the first one.
    #[serde(rename = "search_cursor", skip_serializing_if = "Option::is_none")]
    pub search_cursor: Option<String>,
    /// Value of the limit parameter specified by the user
    #[serde(rename = "limit")]
    pub limit: i32,
    /// The array of results. Each item represents a resource. For each resource, the requested `fields` are returned. If you did not set the `fields` request body parameter, then the `account_id`, `name`, `type`, `family`, and `crn` are returned. An empty array signals the end of the result set, which means there are no more results to fetch
    #[serde(rename = "items")]
    pub items: Vec<models::ResultItem>,
}

impl ScanResult {
    /// The search scan response
    pub fn new(limit: i32, items: Vec<models::ResultItem>) -> ScanResult {
        ScanResult {
            search_cursor: None,
            limit,
            items,
        }
    }
}
